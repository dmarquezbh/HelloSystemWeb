// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;

#nullable disable

namespace DADOS.Models
{
    public partial class LaboratorioPedido
    {
        public LaboratorioPedido()
        {
            LaboratorioPedidoColetaObservacao = new HashSet<LaboratorioPedidoColetaObservacao>();
            LaboratorioPedidoHistorico = new HashSet<LaboratorioPedidoHistorico>();
            LaboratorioPedidoImpedimentoColeta = new HashSet<LaboratorioPedidoImpedimentoColeta>();
            LaboratorioPedidoItem = new HashSet<LaboratorioPedidoItem>();
            LaboratorioPedidoResultadoAgrupado = new HashSet<LaboratorioPedidoResultadoAgrupado>();
        }

        /// <summary>
        /// identificador único do pedido
        /// </summary>
        public int IdLaboratorioPedido { get; set; }
        /// <summary>
        /// atendimento para qual o pedido foi gerado
        /// </summary>
        public int IdAtendimento { get; set; }
        /// <summary>
        /// médico solicitante responsável
        /// </summary>
        public int IdMedicoSolicitante { get; set; }
        /// <summary>
        /// data que o médico escolhe para realizar os exames do pedido
        /// </summary>
        public DateTime DtPedido { get; set; }
        /// <summary>
        /// data do sistema que foi criado o sistema
        /// </summary>
        public DateTime DtCriacaoPedido { get; set; }
        /// <summary>
        /// status da situação geral do pedido, utilizada somente de formas estéticas, todo filtro utiliza o status do item
        /// </summary>
        public int IdStatusPedido { get; set; }
        /// <summary>
        /// prioridade do pedido, tipo tabela 104
        /// </summary>
        public int IdPrioridade { get; set; }
        /// <summary>
        /// unidade organizacional qual o paciente está na hora do pedido
        /// </summary>
        public int IdUnidadeSolicitante { get; set; }
        /// <summary>
        /// descrição preenchida pelo médico
        /// </summary>
        public string TxObservacao { get; set; }
        /// <summary>
        /// suspeita clínica preenchida pelo médico
        /// </summary>
        public string TxSuspeitaClinica { get; set; }
        /// <summary>
        /// se o paciente está fazendo dieta
        /// </summary>
        public bool InDieta { get; set; }
        /// <summary>
        /// se o paciente faz uso de oxigênio
        /// </summary>
        public bool InOxigenio { get; set; }
        /// <summary>
        /// se o paciente está fazendo uso de medicamentos
        /// </summary>
        public bool InMedicamentos { get; set; }
        /// <summary>
        /// quais medicamentos que o paciente está fazendo uso
        /// </summary>
        public string TxMedicamentos { get; set; }
        /// <summary>
        /// exclusão lógica
        /// </summary>
        public bool? InAtivo { get; set; }
        /// <summary>
        /// um pedido pode estar liberado mas com exames que ainda não foram liberados, aí ele é parcial
        /// </summary>
        public bool InParcial { get; set; }
        /// <summary>
        /// integração com a prescrição, caso glicemia capilar
        /// </summary>
        public int? IdSolicitacaoPdEnfermagemhorarioadministracao { get; set; }
        /// <summary>
        /// número do leito que o paciente estava, geralmente para interno
        /// </summary>
        public int? IdLeito { get; set; }
        /// <summary>
        /// integração com a dispensação quando não há prescrição
        /// </summary>
        public int? IdDispensacaoEnfermagem { get; set; }
        /// <summary>
        /// quando o pedido for prioridade emergencial deve-se preencher o motivo
        /// </summary>
        public int? IdMotivoPrioridade { get; set; }
        /// <summary>
        /// email que será enviado quando o exame é liberado
        /// </summary>
        public string TxEmailAviso { get; set; }
        public int QdArquivos { get; set; }
        public int? IdPaciente { get; set; }
        public int? IdProtocolo { get; set; }
        public int? IdEntidadeSolicitante { get; set; }

        public virtual Atendimento IdAtendimentoNavigation { get; set; }
        public virtual DispensacaoEnfermagem IdDispensacaoEnfermagemNavigation { get; set; }
        public virtual PessoaEntidade IdEntidadeSolicitanteNavigation { get; set; }
        public virtual Leito IdLeitoNavigation { get; set; }
        public virtual Pessoa IdMedicoSolicitanteNavigation { get; set; }
        public virtual TipoDiversos IdMotivoPrioridadeNavigation { get; set; }
        public virtual Pessoa IdPacienteNavigation { get; set; }
        public virtual TipoDiversos IdPrioridadeNavigation { get; set; }
        public virtual Exame IdProtocoloNavigation { get; set; }
        public virtual SolicitacaoPdEnfermagemHorarioAdministracao IdSolicitacaoPdEnfermagemhorarioadministracaoNavigation { get; set; }
        public virtual TipoDiversos IdStatusPedidoNavigation { get; set; }
        public virtual UnidadeOrganizacional IdUnidadeSolicitanteNavigation { get; set; }
        public virtual ICollection<LaboratorioPedidoColetaObservacao> LaboratorioPedidoColetaObservacao { get; set; }
        public virtual ICollection<LaboratorioPedidoHistorico> LaboratorioPedidoHistorico { get; set; }
        public virtual ICollection<LaboratorioPedidoImpedimentoColeta> LaboratorioPedidoImpedimentoColeta { get; set; }
        public virtual ICollection<LaboratorioPedidoItem> LaboratorioPedidoItem { get; set; }
        public virtual ICollection<LaboratorioPedidoResultadoAgrupado> LaboratorioPedidoResultadoAgrupado { get; set; }
    }
}